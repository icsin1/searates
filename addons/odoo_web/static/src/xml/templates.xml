<?xml version="1.0" encoding="utf-8"?>

<templates>
    <div t-name="about_details_dialog">
        <div class="modal fade" id="aboutDetails" tabindex="-1" role="dialog" aria-labelledby="aboutDetailsLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="aboutDetailsLabel">About</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">X</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col">
                                <img draggable="false" src="/odoo_base/static/src/images/searateserp-logo.png" width="250" class="pb-5 img-fluid"/>
                            </div>
                            <div class="col text-right">
                                <strong class="small text-upper">Version</strong>
                                <h2 class="p-0 m-0"><t t-esc="info.application_version"/></h2>
                            </div>
                        </div>
                        <div class="mb-2"><strong>Website:</strong> <a t-att-href="info.website" target="_blank"><t t-esc="info.website"/></a></div>
                        <div>Copyright (c) 2023 - TODAY</div>
                        <div>Powered by <a href="https://www.odoo.com" target="_blank">Odoo</a></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div t-extend='res_config_dev_tool'>
        <t t-jquery="div#developer_tool" t-operation="replace"/>
    </div>
    <t t-name="RecordView" owl="1">
        <div t-if="hasGroup" t-attf-class="card card-xl-stretch h-100 ics_dashboard_card" t-att-title="props.tooltip">
            <div class="card-body">
                <div t-if="!state.loaded" class="d-flex justify-content-center">
                    <div class="spinner-border text-primary p-4 m-4 align-self-center" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <div t-if="state.loaded" class="d-flex flex-stack card-p flex-grow-1">
                    <span class="symbol symbol-50px me-2">
                        <span class="symbol-label bg-light-info">
                            <span class="svg-icon svg-icon-muted svg-icon-info svg-icon-2hx">
                            </span>
                        </span>
                    </span>
                    <div class="d-flex flex-column text-end">
                        <h1 class="text-dark fw-bolder ics_state_count" id="state_count" t-esc="state.count"/>
                        <span class="text-muted fw-bold" t-esc="state.title"/>
                    </div>
                </div>
            </div>
        </div>
        <span t-if="!hasGroup"/>
    </t>
    <t t-name="GraphView" owl="1">
        <div t-if="hasGroup" t-attf-class="graph-view card card-xl-stretch mb-xl-8 h-100 ics_dashboard_card">
            <div t-attf-class="card-header d-flex justify-content-between px-2 {{ state.loaded ? '' : 'd-none' }}">
                <div t-esc="state.title"/>
                <div t-attf-class="d-flex ics_card_navigation flex-md-shrink-0">
                    <span class="pr-2 ml-2 d-flex flex-shrink-0" t-if="state.type == 'table'">
                        <t t-esc="state.length &amp;&amp; state.offset + 1"/>-<t t-esc="Math.min(state.length, state.limit)"/> / <t t-esc="state.length"/>
                    </span>
                    <span>
                        <nav aria-label="Page navigation" class="mr-1" t-if="state.type == 'table'">
                            <ul class="pagination mb-0">
                                <li class="page-item mr-1"><button class="btn btn-outline-dark py-0 px-2" t-on-click="previousPage" t-if="state.offset != 0"><i class="fa fa-chevron-left"></i></button></li>
                                <li class="page-item mr-1"><button class="btn btn-outline-dark py-0 px-2" t-on-click="nextPage" t-if="state.length > state.limit"><i class="fa fa-chevron-right"></i></button></li>
                            </ul>
                        </nav>
                    </span>
                    <span class="mr-1">
                        <select t-on-change="onLimitChange" t-if="props.limitOptions &amp;&amp; props.limitOptions.length" class="form-control-sm border-dark font-weight-bold" style="height: 21px;">
                            <t t-foreach="props.limitOptions" t-as="number" t-key="number">
                                <t t-if="props.maxLimit == undefined || props.maxLimit >= number">
                                    <option t-att-value="number" t-att-selected="number == props.limit" class="font-weight-bold"><t t-esc="number"/></option>
                                </t>
                            </t>
                        </select>
                        <select t-on-change="onDataFieldChange" t-if="state.type != 'table' &amp;&amp; props.dataFields" class="form-control-sm border-dark font-weight-bold" style="height: 21px;">
                            <t t-foreach="props.dataFields" t-as="fieldKey" t-key="fieldKey">
                                <option t-att-value="fieldKey" t-att-selected="fieldKey == props.selectedDataField" class="font-weight-bold"><t t-esc="props.dataFields[fieldKey]"/></option>
                            </t>
                        </select>
                         <select t-on-change="onFilterChange" t-if="props.filterOptions" class="form-control-sm border-dark font-weight-bold" style="height: 21px;">
                            <t t-foreach="props.filterOptions" t-as="filterKey" t-key="filterKey">
                                <option t-att-value="filterKey" t-att-selected="filterKey == props.filter" class="font-weight-bold"><t t-esc="props.filterOptions[filterKey]"/></option>
                            </t>
                        </select>
                    </span>
                    <span>
                        <t t-foreach="props.type" t-as="type" t-key="type">
                            <button t-if="state.type != type" class="btn btn-outline-dark py-0 px-2 mr-1 mb-1" t-on-click="changeType(type)" t-att-title="type"><i t-att-class="getIcon(type)" aria-hidden="true"></i></button>
                        </t>
                        <button class="btn btn-outline-dark py-0 px-2 mr-1 mb-1" t-on-click="download" title="Download" t-if="props.download"><i class="fa fa-cloud-download" aria-hidden="true"></i></button>
                    </span>
                </div>
            </div>
            <div t-attf-class="card-body p-0 py-0 {{ state.type == 'table' ? '' : 'd-flex align-items-center p-4'}} {{ state.loaded ? '' : 'd-none' }}">
                <div class="d-flex flex-stack card-p flex-grow-1 flex-column">
                    <t t-if="state.type == 'table'">
                        <table class="table table-sm table-striped mb-0">
                            <thead>
                                <tr>
                                    <t t-foreach="state.labels" t-as="label" t-key="label">
                                        <th scope="col" t-esc="label"/>
                                    </t>
                                </tr>
                            </thead>
                            <tbody>
                                <t t-foreach="state.tableData" t-as="line" t-key="line">
                                    <tr>
                                        <t t-foreach="state.labels" t-as="label" t-key="label">
                                            <td scope="col" t-esc="line[label]"/>
                                        </t>
                                    </tr>
                                </t>
                            </tbody>
                        </table>
                    </t>
                    <t t-else="">
                        <div class="row no-gutters">
                            <div class="col-9">
                                <canvas t-att-title="state.type" id="canvas"></canvas>
                            </div>
                            <div id="legend" class="legend col-3 d-flex align-items-center"></div>
                        </div>
                    </t>
                </div>
            </div>
            <div t-if="!state.loaded" class="spinner-border text-primary p-5 m-5 align-self-center" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <span t-if="!hasGroup"/>
    </t>
</templates>
